{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/Person/PersonLink.tsx","components/Person/PersonRow.tsx","components/People/PeopleTable.tsx","components/People/PeoplePage.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","slug","name","sex","linkClass","classNames","linkTo","to","PersonRow","clickedPersonSlug","born","died","father","mother","motherText","motherName","fatherText","fatherName","rowClass","PeopleTable","people","map","child","find","PeoplePage","showLoader","showError","useParams","length","HomePage","NotFoundPage","Navbar","setPeople","active","isActive","onClick","App","useState","isError","setIsError","useEffect","catch","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a9266b7a.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person\n};\n\nexport const PersonLink = (\n  { person: { slug, name, sex } }: PersonLinkProps,\n) => {\n  const linkClass = classNames({ 'has-text-danger': sex === 'f' });\n  const linkTo = `/people/${slug}`;\n\n  return (\n    <Link className={linkClass} to={linkTo}>{name}</Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype PersonRowProps = {\n  person: Person\n  clickedPersonSlug?: string\n};\n\nexport const PersonRow = ({ person, clickedPersonSlug }: PersonRowProps) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    father,\n    mother,\n    motherName,\n    fatherName,\n  } = person;\n\n  const motherText = motherName || '-';\n  const fatherText = fatherName || '-';\n\n  const rowClass = classNames(\n    { 'has-background-warning': slug === clickedPersonSlug },\n  );\n\n  return (\n    <tr data-cy=\"person\" className={rowClass}>\n      <td>\n        <PersonLink\n          person={person}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink\n            person={mother}\n          />\n        ) : <>{motherText}</>}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink\n            person={father}\n          />\n        ) : <>{fatherText}</>}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonRow } from '../Person/PersonRow';\n\ntype PeopleTableProps = {\n  people: Person[]\n  clickedPersonSlug?: string\n};\n\nexport const PeopleTable = (\n  { people, clickedPersonSlug }: PeopleTableProps,\n) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const child = { ...person };\n\n          child.father = people.find(\n            father => father.name === child.fatherName,\n          );\n\n          child.mother = people.find(\n            mother => mother.name === child.motherName,\n          );\n\n          return (\n            <PersonRow\n              key={child.slug}\n              person={child}\n              clickedPersonSlug={clickedPersonSlug}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\n\ntype PeoplePageProps = {\n  showLoader: boolean\n  showError: boolean\n  people: Person[] | null\n};\n\nexport const PeoplePage = (\n  { showLoader, showError, people }: PeoplePageProps,\n) => {\n  const { slug } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {showLoader && <Loader />}\n\n          {showError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {people && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people && people.length > 0 && (\n            <PeopleTable people={people} clickedPersonSlug={slug} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype NavbarProps = {\n  setPeople: React.Dispatch<React.SetStateAction<Person[] | null>>\n};\n\ntype Active = {\n  isActive: boolean\n};\n\nexport const Navbar = ({ setPeople }: NavbarProps) => {\n  const linkClass = (active: Active) => classNames('navbar-item', {\n    'has-background-grey-lighter': active.isActive,\n  });\n\n  return (\n    <div className=\"navbar-brand\">\n      <NavLink\n        onClick={() => setPeople(null)}\n        to=\"/\"\n        className={linkClass}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"people\"\n        className={linkClass}\n      >\n        People\n      </NavLink>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport './App.scss';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { PeoplePage } from './components/People/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n\n  const showLoader = people === null && !isError;\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true));\n  }, [people?.length]);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <Navbar setPeople={setPeople} />\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage\n                    showLoader={showLoader}\n                    showError={isError}\n                    people={people}\n                  />\n                )}\n              />\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeoplePage\n                    showLoader={showLoader}\n                    showError={isError}\n                    people={people}\n                  />\n                )}\n              />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}